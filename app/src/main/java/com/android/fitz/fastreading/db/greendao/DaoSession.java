package com.android.fitz.fastreading.db.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.android.fitz.fastreading.db.entity.AnimaPict;
import com.android.fitz.fastreading.db.entity.Article;
import com.android.fitz.fastreading.db.entity.MenuView;
import com.android.fitz.fastreading.db.entity.Question;
import com.android.fitz.fastreading.db.entity.Test;
import com.android.fitz.fastreading.db.entity.Words;

import com.android.fitz.fastreading.db.greendao.AnimaPictDao;
import com.android.fitz.fastreading.db.greendao.ArticleDao;
import com.android.fitz.fastreading.db.greendao.MenuViewDao;
import com.android.fitz.fastreading.db.greendao.QuestionDao;
import com.android.fitz.fastreading.db.greendao.TestDao;
import com.android.fitz.fastreading.db.greendao.WordsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig animaPictDaoConfig;
    private final DaoConfig articleDaoConfig;
    private final DaoConfig menuViewDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig testDaoConfig;
    private final DaoConfig wordsDaoConfig;

    private final AnimaPictDao animaPictDao;
    private final ArticleDao articleDao;
    private final MenuViewDao menuViewDao;
    private final QuestionDao questionDao;
    private final TestDao testDao;
    private final WordsDao wordsDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        animaPictDaoConfig = daoConfigMap.get(AnimaPictDao.class).clone();
        animaPictDaoConfig.initIdentityScope(type);

        articleDaoConfig = daoConfigMap.get(ArticleDao.class).clone();
        articleDaoConfig.initIdentityScope(type);

        menuViewDaoConfig = daoConfigMap.get(MenuViewDao.class).clone();
        menuViewDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        testDaoConfig = daoConfigMap.get(TestDao.class).clone();
        testDaoConfig.initIdentityScope(type);

        wordsDaoConfig = daoConfigMap.get(WordsDao.class).clone();
        wordsDaoConfig.initIdentityScope(type);

        animaPictDao = new AnimaPictDao(animaPictDaoConfig, this);
        articleDao = new ArticleDao(articleDaoConfig, this);
        menuViewDao = new MenuViewDao(menuViewDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        testDao = new TestDao(testDaoConfig, this);
        wordsDao = new WordsDao(wordsDaoConfig, this);

        registerDao(AnimaPict.class, animaPictDao);
        registerDao(Article.class, articleDao);
        registerDao(MenuView.class, menuViewDao);
        registerDao(Question.class, questionDao);
        registerDao(Test.class, testDao);
        registerDao(Words.class, wordsDao);
    }
    
    public void clear() {
        animaPictDaoConfig.clearIdentityScope();
        articleDaoConfig.clearIdentityScope();
        menuViewDaoConfig.clearIdentityScope();
        questionDaoConfig.clearIdentityScope();
        testDaoConfig.clearIdentityScope();
        wordsDaoConfig.clearIdentityScope();
    }

    public AnimaPictDao getAnimaPictDao() {
        return animaPictDao;
    }

    public ArticleDao getArticleDao() {
        return articleDao;
    }

    public MenuViewDao getMenuViewDao() {
        return menuViewDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public TestDao getTestDao() {
        return testDao;
    }

    public WordsDao getWordsDao() {
        return wordsDao;
    }

}
